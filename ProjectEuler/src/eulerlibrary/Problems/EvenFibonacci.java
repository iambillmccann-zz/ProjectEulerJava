package eulerlibrary.Problems;

import eulerlibrary.MathLibrary.MathLibrary;

public class EvenFibonacci implements IEulerSolution {

    final long LIMIT  = 4000000;

    /**
     * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
     * By starting with 1 and 2, the first 10 terms will be:
     *     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
     * find the sum of the even-valued terms.
     * 
     * @Return    The solution to the problem formatted as a string
     */
    @Override
    public String Compute() 
    {
        long result = 2;
        long term1 = 1;
        long term2 = 2;
        long sum;

        sum = term1 + term2;
        while (sum < LIMIT)
        {
            if (MathLibrary.IsMultiple(sum, 2)) result += sum;
            term1 = term2;
            term2 = sum;
            sum = term1 + term2;
        }

        return Long.toString(result);
    }

}